#!/usr/bin/python
from socket import *  # Imports socket module
import sys
import ssl


param = len(sys.argv)
if param == 6:
        if sys.argv[1] == '-p':
            try:
                port = int(sys.argv[2])
                host = sys.argv[4]
                NUID = sys.argv[5]
                connect = True
                connect_ssl = True
            except ValueError:
                host = sys.argv[4]
                NUID = sys.argv[5]
                connect = False
                print("Port Number not an integer")
                pass  # it was not an integer
        else:
            host = sys.argv[4]
            NUID = sys.argv[5]
            connect = False

elif param == 5:
        if sys.argv[1] == '-p':
            try:
                port = int(sys.argv[2])
                host = sys.argv[3]
                NUID = sys.argv[4]
                connect = True
                connect_ssl = False
            except ValueError:
                host = sys.argv[3]
                NUID = sys.argv[4]
                connect = False
                print("Port Number not an integer")
                pass  # it was not an integer

        else:
            host = sys.argv[3]
            NUID = sys.argv[4]
            connect = False

elif param == 4:
        if sys.argv[1] == '-s':
            port = 27994
            host = sys.argv[2]
            NUID = sys.argv[3]
            connect = True
            connect_ssl = True
        else:
            host = sys.argv[2]
            NUID = sys.argv[3]
            connect = False

elif param == 3:
        port = 27993
        host = sys.argv[1]
        NUID = sys.argv[2]
        connect = True
        connect_ssl = False


name = "cs5700fall2015"

if not connect:
    print('Invalid Command.')

if len(NUID) != 9:
    connect = False
    print("Invalid NUID. Length should be 9")

if host not in ['login.ccs.neu.edu', '129.10.117.100']:
    connect = False
    print("Invalid Host name. It should be login.ccs.neu.edu or 129.10.117.100")


if connect:
    if connect_ssl:
        s = socket(AF_INET, SOCK_STREAM)  # Creates a socket
        s.connect((host, port))  # Connect to server address
        s = ssl.wrap_socket(s, ssl_version=ssl.PROTOCOL_TLSv1, ciphers="AES256-SHA")
       # print("connected")
    else:
        s = socket(AF_INET, SOCK_STREAM)  # Creates a socket
        s.connect((host, port))

    s.send(name + " HELLO " + (str(NUID)) + "\n")
else:
    print('Usage: client <-p port> <-s> [Hostname] [NUID] for incorrect input')

error_msg = "Incorrect.Pls Resend"


def STATUS_function(arr):
    if arr[3] is "+":
        result = int(arr[2]) + int(arr[4])
        result = name + " " + str(result) + "\n"



    elif arr[3] is "-":
        result = int(arr[2]) - int(arr[4])
        result = name + " " + str(result) + "\n"


    elif arr[3] is "*":
        result = int(arr[2]) * int(arr[4])
        result = name + " " + str(result) + "\n"



    elif arr[3] is "/":
        try:
            result = int(arr[2]) / int(arr[4])
        except ZeroDivisionError:
            result = str(0) + "\n"
        result = name + " " + str(result) + "\n"

    s.send(str(result))

if connect:
    while True:
       # print("in while port:" + str(port))
        msg = s.recv(1024)
       # print(msg)
        arr = msg.split("\n")
        soln = arr[0].split(" ")

        if soln[1] == "STATUS":
            STATUS_function(soln)
#issue here with BYE msg
        elif soln[1] == "BYE":
            secret_flag = soln[2]
            file = open("secret_flags.txt", "a")
            file.write(secret_flag + "\n")
            file.close()
            print(secret_flag)

            s.close()
            sys.exit(1)
            break



        ## print secret key
if connect:
    s.close()  # Closes the socket
## End of code
